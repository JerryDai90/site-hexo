<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2019/07/07/wo-de-bo-ke-ban-jia-la/"/>
      <url>/2019/07/07/wo-de-bo-ke-ban-jia-la/</url>
      
        <content type="html"><![CDATA[<h1 id="我的博客搬家啦"><a href="#我的博客搬家啦" class="headerlink" title="我的博客搬家啦"></a>我的博客搬家啦</h1><p>目前博客使用的是 MWeb 来做静态化的博客</p><h3 id="1-评论"><a href="#1-评论" class="headerlink" title="1. 评论"></a>1. 评论</h3><p>可以用 <code>来必力</code> 和 <code>disqus</code></p><h4 id="1-1-来必力"><a href="#1-1-来必力" class="headerlink" title="1.1 来必力"></a>1.1 来必力</h4><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 来必力City版安装代码 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lv-container<span class="token punctuation">"</span></span> <span class="token attr-name">data-id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span> <span class="token attr-name">data-uid</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MTAyMC80NTE2Mi8yMTY3OQ<span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">   <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token keyword">var</span> j<span class="token punctuation">,</span> e <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> LivereTower <span class="token operator">===</span> <span class="token string">'function'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>       j <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>       j<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'https://cdn-city.livere.com/js/embed.dist.js'</span><span class="token punctuation">;</span>       j<span class="token punctuation">.</span><span class="token keyword">async</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>       e<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> <span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>noscript</span><span class="token punctuation">></span></span> 为正常使用来必力评论功能请激活JavaScript<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>noscript</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- City版安装代码已完成 --></span></code></pre><h4 id="1-2-disqus"><a href="#1-2-disqus" class="headerlink" title="1.2 disqus"></a>1.2 disqus</h4><p>但是disqus需要 fQ 才可以被访问</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>disqus_thread<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token comment" spellcheck="true">/***  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/</span><span class="token comment" spellcheck="true">/*var disqus_config = function () {this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variablethis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable};*/</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// DON'T EDIT BELOW THIS LINE</span><span class="token keyword">var</span> d <span class="token operator">=</span> document<span class="token punctuation">,</span> s <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'https://lsof.disqus.com/embed.js'</span><span class="token punctuation">;</span>s<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-timestamp'</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>head <span class="token operator">||</span> d<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>noscript</span><span class="token punctuation">></span></span>Please enable JavaScript to view the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://disqus.com/?ref_noscript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>comments powered by Disqus.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>noscript</span><span class="token punctuation">></span></span></code></pre><h3 id="2-分享"><a href="#2-分享" class="headerlink" title="2. 分享"></a>2. 分享</h3><pre><code>&lt;!-- Go to www.addthis.com/dashboard to customize your tools --&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5d20842d6059155b&quot;&gt;&lt;/script&gt;&lt;div class=&quot;addthis_native_toolbox&quot;&gt;&lt;/div&gt;</code></pre><h3 id="3-点击量分析"><a href="#3-点击量分析" class="headerlink" title="3. 点击量分析"></a>3. 点击量分析</h3><p>使用的是谷歌的分析</p><pre><code>&lt;!-- Global site tag (gtag.js) - Google Analytics --&gt;&lt;script async src=&quot;https://www.googletagmanager.com/gtag/js?id=UA-143415760-1&quot;&gt;&lt;/script&gt;&lt;script&gt;  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag(&#39;js&#39;, new Date());  gtag(&#39;config&#39;, &#39;UA-143415760-1&#39;);&lt;/script&gt;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/07/07/ji-shang-che-shi-jian-2019-nian-6-yue-29-ri-zao-shang-7-dian/"/>
      <url>/2019/07/07/ji-shang-che-shi-jian-2019-nian-6-yue-29-ri-zao-shang-7-dian/</url>
      
        <content type="html"><![CDATA[<h1 id="记上车时间-2019年6月29日早上7点"><a href="#记上车时间-2019年6月29日早上7点" class="headerlink" title="记上车时间-2019年6月29日早上7点"></a>记上车时间-2019年6月29日早上7点</h1><p>中国人对房子都一个蜜汁执着的追求，我们也不例外。我们也想考虑过上车，也想着一辈子租房也OK。</p><blockquote><p>何为上车，这一说如果没有记错的话是源于香港的房地产。也就是说买房就等于上车。</p></blockquote><h3 id="1-难上车的广州"><a href="#1-难上车的广州" class="headerlink" title="1. 难上车的广州"></a>1. 难上车的广州</h3><p>按年头来说，已经在广州漂泊了 7 年，但是面对广州的房价，有种有心无力的的感觉。按目前的实力来说，在距离广州市中心 60KM 左右是够得着的（均价 1.5W+）。奈何交通极不方便（交通方便一点点基本上到 2W+，通勤时间也要 1 小时+）。这些地方为了 10 年是会有地铁通的，这个是毋庸置疑的。在广州看了几年，看房子属于长经验的那种（对不起了，我伤害的那些中介。。）</p><h3 id="2-老家上车"><a href="#2-老家上车" class="headerlink" title="2. 老家上车"></a>2. 老家上车</h3><p>看到这里，估计很多小伙伴都惊讶，广州上班，老家上车。恰恰其实很多人都是这样。大城市房价极高，我是不愿意牺牲自己的很多的生活质量（哈哈，不能随意跳槽了）。我身边很多人都加了很大的杠杆买房（找那些用不上征信的贷款，但是利率极高、信用卡套现、花呗等手段。再或者有一个有钱的亲戚 <del>_</del>）。我希望房子是我可以够得着，但不至于把我压着喘不过气。</p><h3 id="3-经验分享"><a href="#3-经验分享" class="headerlink" title="3. 经验分享"></a>3. 经验分享</h3><h4 id="3-1-利率计算"><a href="#3-1-利率计算" class="headerlink" title="3.1 利率计算"></a>3.1 利率计算</h4><p>按目前来说，有 2 个关键参数</p><ul><li>国家<code>基准利率</code>是 <code>4.9</code>，这个是国家调控的，非固定的。</li><li>首套房是按 <code>15%</code>，基准利率，固定比例。</li></ul><p>也就算下来是 (4.9 * 15% + 4.9) = 5.635，这个数值已经有点高了。</p><h4 id="3-2-户型朝向"><a href="#3-2-户型朝向" class="headerlink" title="3.2 户型朝向"></a>3.2 户型朝向</h4><p>这个是个大学问，我的建议。最好买一字楼，无论的是采光朝向都很好，不过同等位置估计价格会贵上不少。另外公摊面积多。（碧桂园盘 30 方+）</p><h4 id="3-3-认购和贷款"><a href="#3-3-认购和贷款" class="headerlink" title="3.3 认购和贷款"></a>3.3 认购和贷款</h4><p>合同条款很多，没有全部看完。只看了关键的，比如说什么交房、报修是怎么样的。有担心被卖猪仔，哈哈。</p><h4 id="3-4-贷款还款方式"><a href="#3-4-贷款还款方式" class="headerlink" title="3.4 贷款还款方式"></a>3.4 贷款还款方式</h4><p>有 2 中，本息和本金，做了一个对比图。</p><table><thead><tr><th>–</th><th>本息</th><th>本金</th></tr></thead><tbody><tr><td>总利息</td><td>多</td><td>少</td></tr><tr><td>月供压力</td><td>低，每月一样</td><td>开始高，差不多到第 12 年的时候就和本息一样的金额</td></tr><tr><td>提前还款</td><td>不建议（还的利息多）</td><td>条件允许建议（因为一开始还的本金多）</td></tr></tbody></table><p>分析方法：建议去支付宝搜索理财小工具&gt;房贷计算，里面有明细数据，可以自行分析一下。</p><h4 id="3-5-购买时机"><a href="#3-5-购买时机" class="headerlink" title="3.5 购买时机"></a>3.5 购买时机</h4><p>可以选的话买大盘，每年在 6、12月底入手，应为这个时候上市公司搞报表。需要冲量。（销售和我说的，没考究过<del>_</del>）</p><p>BTW，签名真的是签到手软，手动狗头。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/07/06/mysql-5.6.38-an-zhuang-redhat-6/"/>
      <url>/2019/07/06/mysql-5.6.38-an-zhuang-redhat-6/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql-5-6-38-安装（redhat-6）"><a href="#mysql-5-6-38-安装（redhat-6）" class="headerlink" title="mysql 5.6.38 安装（redhat 6）"></a>mysql 5.6.38 安装（redhat 6）</h1><pre><code>本文只适用于通过 rpm 二进制的方式安装，使用源码安装的请自行百度。</code></pre><h2 id="1-准备步骤"><a href="#1-准备步骤" class="headerlink" title="1. 准备步骤"></a>1. 准备步骤</h2><p>下载地址 ：<a href="https://dev.mysql.com/downloads/mysql/5.6.html" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/5.6.html</a></p><p>只需要以下安装文件</p><pre><code>MySQL-client*.rpmMySQL-devel*.rpmMySQL-server*.rpm </code></pre><p><strong>需要使用 root 的账号进行操作</strong></p><h2 id="2-卸载"><a href="#2-卸载" class="headerlink" title="2. 卸载"></a>2. 卸载</h2><h3 id="2-1-卸载包"><a href="#2-1-卸载包" class="headerlink" title="2.1 卸载包"></a>2.1 卸载包</h3><p>找出所有已经安装的包</p><pre><code>rpm -qa | grep -i mysql</code></pre><p>移除上面命令列出来的包</p><pre><code>rpm -e pagename --nodeps参数 pagename 上面出现的包名参数 --nodeps 表示不检查依赖进行删除</code></pre><h3 id="2-2-删除文件"><a href="#2-2-删除文件" class="headerlink" title="2.2 删除文件"></a>2.2 删除文件</h3><p>查找 mysql 的文件</p><pre><code>find / -name mysql</code></pre><p>删除</p><pre><code>rm -rf folderORFileNamw</code></pre><h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3 安装"></a>3 安装</h2><h3 id="3-1-安装软件"><a href="#3-1-安装软件" class="headerlink" title="3.1 安装软件"></a>3.1 安装软件</h3><p>依次执行</p><pre><code>rpm -ivh MySQL-devel*.rpmrpm -ivh MySQL-client*.rpmrpm -ivh MySQL-server*.rpm </code></pre><p>安装输出的日志如下</p><pre><code>[root@bogon MySQL-5.6.43-1.el7.x86_64.rpm-bundle]# rpm -ivh MySQL-devel-5.6.43-1.el7.x86_64.rpm warning: MySQL-devel-5.6.43-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing...                          ################################# [100%]Updating / installing...   1:MySQL-devel-5.6.43-1.el7         ################################# [100%][root@bogon MySQL-5.6.43-1.el7.x86_64.rpm-bundle]# rpm -ivh MySQL-client-5.6.43-1.el7.x86_64.rpm warning: MySQL-client-5.6.43-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing...                          ################################# [100%]Updating / installing...   1:MySQL-client-5.6.43-1.el7        ################################# [100%][root@bogon MySQL-5.6.43-1.el7.x86_64.rpm-bundle]# rpm -ivh MySQL-sMySQL-server-5.6.43-1.el7.x86_64.rpm         MySQL-shared-5.6.43-1.el7.x86_64.rpm         MySQL-shared-compat-5.6.43-1.el7.x86_64.rpm[root@bogon MySQL-5.6.43-1.el7.x86_64.rpm-bundle]# rpm -ivh MySQL-server-5.6.43-1.el7.x86_64.rpm warning: MySQL-server-5.6.43-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing...                          ################################# [100%]Updating / installing...   1:MySQL-server-5.6.43-1.el7        ################################# [100%]perl: warning: Setting locale failed.perl: warning: Please check that your locale settings:    LANGUAGE = (unset),    LC_ALL = (unset),    LC_CTYPE = &quot;UTF-8&quot;,    LANG = &quot;zh_CN.UTF-8&quot;    are supported and installed on your system.perl: warning: Falling back to the standard locale (&quot;C&quot;).2019-02-13 14:09:05 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).2019-02-13 14:09:05 0 [Note] Ignoring --secure-file-priv value as server is running with --bootstrap.2019-02-13 14:09:05 0 [Note] /usr/sbin/mysqld (mysqld 5.6.43) starting as process 15754 ...2019-02-13 14:09:05 15754 [Note] InnoDB: Using atomics to ref count buffer pool pages2019-02-13 14:09:05 15754 [Note] InnoDB: The InnoDB memory heap is disabled2019-02-13 14:09:05 15754 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins2019-02-13 14:09:05 15754 [Note] InnoDB: Memory barrier is not used2019-02-13 14:09:05 15754 [Note] InnoDB: Compressed tables use zlib 1.2.112019-02-13 14:09:05 15754 [Note] InnoDB: Using Linux native AIO2019-02-13 14:09:05 15754 [Note] InnoDB: Using CPU crc32 instructions2019-02-13 14:09:05 15754 [Note] InnoDB: Initializing buffer pool, size = 128.0M2019-02-13 14:09:05 15754 [Note] InnoDB: Completed initialization of buffer pool2019-02-13 14:09:05 15754 [Note] InnoDB: The first specified data file ./ibdata1 did not exist: a new database to be created!2019-02-13 14:09:05 15754 [Note] InnoDB: Setting file ./ibdata1 size to 12 MB2019-02-13 14:09:05 15754 [Note] InnoDB: Database physically writes the file full: wait...2019-02-13 14:09:05 15754 [Note] InnoDB: Setting log file ./ib_logfile101 size to 48 MB2019-02-13 14:09:06 15754 [Note] InnoDB: Setting log file ./ib_logfile1 size to 48 MB2019-02-13 14:09:07 15754 [Note] InnoDB: Renaming log file ./ib_logfile101 to ./ib_logfile02019-02-13 14:09:07 15754 [Warning] InnoDB: New log files created, LSN=457812019-02-13 14:09:07 15754 [Note] InnoDB: Doublewrite buffer not found: creating new2019-02-13 14:09:07 15754 [Note] InnoDB: Doublewrite buffer created2019-02-13 14:09:07 15754 [Note] InnoDB: 128 rollback segment(s) are active.2019-02-13 14:09:07 15754 [Warning] InnoDB: Creating foreign key constraint system tables.2019-02-13 14:09:07 15754 [Note] InnoDB: Foreign key constraint system tables created2019-02-13 14:09:07 15754 [Note] InnoDB: Creating tablespace and datafile system tables.2019-02-13 14:09:07 15754 [Note] InnoDB: Tablespace and datafile system tables created.2019-02-13 14:09:07 15754 [Note] InnoDB: Waiting for purge to start2019-02-13 14:09:07 15754 [Note] InnoDB: 5.6.43 started; log sequence number 0A random root password has been set. You will find it in &#39;/root/.mysql_secret&#39;.2019-02-13 14:09:08 15754 [Note] Binlog end2019-02-13 14:09:08 15754 [Note] InnoDB: FTS optimize thread exiting.2019-02-13 14:09:08 15754 [Note] InnoDB: Starting shutdown...2019-02-13 14:09:10 15754 [Note] InnoDB: Shutdown completed; log sequence number 16259772019-02-13 14:09:10 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).2019-02-13 14:09:10 0 [Note] Ignoring --secure-file-priv value as server is running with --bootstrap.2019-02-13 14:09:10 0 [Note] /usr/sbin/mysqld (mysqld 5.6.43) starting as process 15776 ...2019-02-13 14:09:10 15776 [Note] InnoDB: Using atomics to ref count buffer pool pages2019-02-13 14:09:10 15776 [Note] InnoDB: The InnoDB memory heap is disabled2019-02-13 14:09:10 15776 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins2019-02-13 14:09:10 15776 [Note] InnoDB: Memory barrier is not used2019-02-13 14:09:10 15776 [Note] InnoDB: Compressed tables use zlib 1.2.112019-02-13 14:09:10 15776 [Note] InnoDB: Using Linux native AIO2019-02-13 14:09:10 15776 [Note] InnoDB: Using CPU crc32 instructions2019-02-13 14:09:10 15776 [Note] InnoDB: Initializing buffer pool, size = 128.0M2019-02-13 14:09:10 15776 [Note] InnoDB: Completed initialization of buffer pool2019-02-13 14:09:10 15776 [Note] InnoDB: Highest supported file format is Barracuda.2019-02-13 14:09:10 15776 [Note] InnoDB: 128 rollback segment(s) are active.2019-02-13 14:09:10 15776 [Note] InnoDB: Waiting for purge to start2019-02-13 14:09:10 15776 [Note] InnoDB: 5.6.43 started; log sequence number 16259772019-02-13 14:09:10 15776 [Note] Binlog end2019-02-13 14:09:10 15776 [Note] InnoDB: FTS optimize thread exiting.2019-02-13 14:09:10 15776 [Note] InnoDB: Starting shutdown...2019-02-13 14:09:12 15776 [Note] InnoDB: Shutdown completed; log sequence number 1625987A RANDOM PASSWORD HAS BEEN SET FOR THE MySQL root USER !You will find that password in &#39;/root/.mysql_secret&#39;.You must change that password on your first connect,no other statement but &#39;SET PASSWORD&#39; will be accepted.See the manual for the semantics of the &#39;password expired&#39; flag.Also, the account for the anonymous user has been removed.In addition, you can run:  /usr/bin/mysql_secure_installationwhich will also give you the option of removing the test database.This is strongly recommended for production servers.See the manual for more instructions.Please report any problems at http://bugs.mysql.com/The latest information about MySQL is available on the web at  http://www.mysql.comSupport MySQL by buying support/licenses at http://shop.mysql.comWARNING: Found existing config file /usr/my.cnf on the system.Because this file might be in use, it was not replaced,but was used in bootstrap (unless you used --defaults-file)and when you later start the server.The new default config file was created as /usr/my-new.cnf,please compare it with your file and take the changes you need.</code></pre><p>root 密码在 <code>/root/.mysql_secret</code>, 可以使用命令查看密码 </p><pre><code>cat /root/.mysql_secret</code></pre><p>此时安装完成后 mysql 已经自动启动。查看是否启动成功可以使用 <code>lsof -i:3306</code> 来查看。</p><pre><code>如果没有启动，则说明安装失败了（或者使用 service mysql start 启动一下），需要看一下 `/var/lib/mysql/机器名称.err`，如果 /var/lib/mysql/ 什么都没有，没有 `mysql` 库，重新安装一下  `MySQL-server*.rpm ` 即可。下图是正常的</code></pre><p><img src="http://img.lsof.fun/2019-02-04-15482366261875.jpg" alt></p><h3 id="3-2-配置-my-cnf"><a href="#3-2-配置-my-cnf" class="headerlink" title="3.2 配置 my.cnf"></a>3.2 配置 my.cnf</h3><p>使用命令 <code>find / -name my-default.cnf</code> 找到此文件。<br>复制配置文件到 <code>/etc/</code> 目录下</p><pre><code>cp thisFilePath/my-default.cnf /etc/my.cnf</code></pre><p>编辑修改 my.cnf 文件，只需要修改以下配置</p><pre><code> # mysql 安装的基础目录 basedir = /usr # mysql 数据库文件目录（默认目录） datadir = /var/lib/mysql # 端口（可随意修改） port = 3306 # 大小写忽略（用于表名、字段） lower_case_table_names=1</code></pre><p>附上我的 my.cnf 配置</p><pre><code># For advice on how to change settings please see# http://dev.mysql.com/doc/refman/5.6/en/server-configuration-defaults.html# *** DO NOT EDIT THIS FILE. It&#39;s a template which will be copied to the# *** default location during install, and will be replaced if you# *** upgrade to a newer version of MySQL.[mysqld]# Remove leading # and set to the amount of RAM for the most important data# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.# innodb_buffer_pool_size = 128M# Remove leading # to turn on a very important data integrity option: logging# changes to the binary log between backups.# log_bin# These are commonly set, remove the # and set as required. basedir = /usr datadir = /var/lib/mysql port = 3306# server_id = .....# socket = .....# Remove leading # to set options mainly useful for reporting servers.# The server defaults are faster for transactions and fast SELECTs.# Adjust sizes as needed, experiment to find the optimal values. join_buffer_size = 128M sort_buffer_size = 16M# read_rnd_buffer_size = 2M lower_case_table_name = 1thread_cache_size = 16 query_cache_size = 128Mmax_connections = 3000 sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES </code></pre><h3 id="3-3-root-密码修改和外部访问"><a href="#3-3-root-密码修改和外部访问" class="headerlink" title="3.3 root 密码修改和外部访问"></a>3.3 root 密码修改和外部访问</h3><pre><code>mysql -u root -p#输入 `/root/.mysql_secret` 中的密码登陆，这个时候会让你重置新密码mysql&gt; SET password=PASSWORD(&#39;新密码&#39;);mysql&gt; flush privileges;</code></pre><p>设置 root 可以在外面任何机器可以访问。</p><pre><code>mysql&gt; use mysql;mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;新密码&#39; WITH GRANT OPTION;mysql&gt; select host, user from user;+-----------+--------+| host      | user   |+-----------+--------+| %         | root   || %         | root@% || 127.0.0.1 | root   || ::1       | root   || bogon     | root   |+-----------+--------+5 rows in set (0.00 sec)</code></pre><p>存在 <code>%         | root</code> 即可成功添加</p><h2 id="4-备注"><a href="#4-备注" class="headerlink" title="4. 备注"></a>4. 备注</h2><p>以下为mysql 安装后的目录说明</p><table><thead><tr><th>Directory</th><th>Contents of Directory</th></tr></thead><tbody><tr><td>/usr/bin</td><td>Client programs and scripts</td></tr><tr><td>/usr/sbin</td><td>The mysqld server</td></tr><tr><td>/var/lib/mysql</td><td>Log files, databases</td></tr><tr><td>/usr/share/info</td><td>Manual in Info format</td></tr><tr><td>/usr/share/man</td><td>Unix manual pages</td></tr><tr><td>/usr/include/mysql</td><td>Include (header) files</td></tr><tr><td>/usr/lib/mysql</td><td>Libraries</td></tr><tr><td>/usr/share/mysql</td><td>Miscellaneous support files, including error messages,character set files, sample configuration files, SQL for database installation</td></tr><tr><td>/usr/share/sql-bench</td><td>Benchmarks</td></tr></tbody></table><h2 id="5-额外加餐"><a href="#5-额外加餐" class="headerlink" title="5. 额外加餐"></a>5. 额外加餐</h2><p>注意，window 下的文件夹路径需要注意，如果盘符后面是有转义的字符，需要加上2个反斜杠<br><img src="http://img.lsof.fun/2019-02-04-15492117790460.jpg" alt="-w500"></p><h2 id="6-安装参考链接"><a href="#6-安装参考链接" class="headerlink" title="6. 安装参考链接"></a>6. 安装参考链接</h2><p><a href="http://blog.csdn.net/u010257584/article/details/51320542" target="_blank" rel="noopener">http://blog.csdn.net/u010257584/article/details/51320542</a></p><p><a href="http://m.blog.itpub.net/26736162/viewspace-2135880/" target="_blank" rel="noopener">mysql my.cnf 说明</a><br><a href="https://blog.csdn.net/hrayha/article/details/46128731" target="_blank" rel="noopener">https://blog.csdn.net/hrayha/article/details/46128731</a></p><p><a href="https://blog.csdn.net/hqmanwangkai/article/details/83225446" target="_blank" rel="noopener">https://blog.csdn.net/hqmanwangkai/article/details/83225446</a></p><p><a href="https://www.cnblogs.com/cnblogsfans/archive/2009/09/21/1570942.html" target="_blank" rel="noopener">https://www.cnblogs.com/cnblogsfans/archive/2009/09/21/1570942.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/04/23/java-illegal-character-65279/"/>
      <url>/2019/04/23/java-illegal-character-65279/</url>
      
        <content type="html"><![CDATA[<h1 id="java-illegal-character-65279"><a href="#java-illegal-character-65279" class="headerlink" title="java: illegal character: \65279"></a>java: illegal character: \65279</h1><p>myeclipse 工程用 idea 导入的时候，会报以下错误。</p><pre><code>java: illegal character: \65279</code></pre><p>大概原因是因为在 window下面保存 <code>BOM</code> 格式了，用户16进制来看的话，前面有这个字节</p><pre><code>-17 -69 -65</code></pre><p>需要要去掉这几个字段，idea 编译就会正常了。给出实现代码</p><p>用到了 <code>commons-io</code></p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileUtils<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Collection<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Iterator<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        Collection<span class="token operator">&lt;</span>File<span class="token operator">></span> files <span class="token operator">=</span> FileUtils<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"you source path"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Iterator<span class="token operator">&lt;</span>File<span class="token operator">></span> iterator <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token punctuation">;</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>            File next <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span> next<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">".java"</span><span class="token punctuation">)</span><span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes1 <span class="token operator">=</span> FileUtils<span class="token punctuation">.</span><span class="token function">readFileToByteArray</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span> bytes1<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span> bytes1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">17</span> <span class="token operator">&amp;&amp;</span> bytes1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">69</span> <span class="token operator">&amp;&amp;</span> bytes1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">65</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes2 <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>bytes1<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> bytes1<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>                FileUtils<span class="token punctuation">.</span><span class="token function">writeByteArrayToFile</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> bytes2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/03/06/xia-zai-maven-de-xiang-guan-jar/"/>
      <url>/2019/03/06/xia-zai-maven-de-xiang-guan-jar/</url>
      
        <content type="html"><![CDATA[<h1 id="下载-maven-的相关-jar"><a href="#下载-maven-的相关-jar" class="headerlink" title="下载 maven 的相关 jar"></a>下载 maven 的相关 jar</h1><p>转自：<a href="https://www.ktanx.com/blog/p/4033" target="_blank" rel="noopener">https://www.ktanx.com/blog/p/4033</a></p><p>经常碰到这种事情:</p><p>在一些非maven工程中(由于某种原因这种工程还是手工添加依赖的),需要用到某个新的类库(假设这个类库发布在maven库中),而这个类库又间接依赖很多其他类库,如果依赖路径非常复杂的话,一个个检查手动下载是很麻烦的事.</p><p>下面给出一个便捷的办法:</p><p>创建一个新目录里面建一个maven pom文件, 添加需要依赖的类库:</p><pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;    &lt;groupId&gt;com.dep.download&lt;/groupId&gt;    &lt;artifactId&gt;dep-download&lt;/artifactId&gt;    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;    &lt;dependencies&gt;        &lt;dependency&gt;            &lt;groupId&gt;com.xx.xxx&lt;/groupId&gt;            &lt;artifactId&gt;yy-yyy&lt;/artifactId&gt;            &lt;version&gt;x.y.z&lt;/version&gt;            &lt;scope/&gt;        &lt;/dependency&gt;    &lt;/dependencies&gt;&lt;/project&gt;</code></pre><p>在这个目录下运行命令:</p><p>mvn -f download-dep-pom.xml dependency:copy-dependencies<br>所有跟这个类库相关的直接和间接依赖的jar包都会下载到 ./target/dependency/下</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2018/11/15/mysql-beng-kui/"/>
      <url>/2018/11/15/mysql-beng-kui/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql-崩溃"><a href="#mysql-崩溃" class="headerlink" title="mysql 崩溃"></a>mysql 崩溃</h1><p>导入了一张100W 多万的表，导入到一半mysql 就挂了，怎么重启服务都启动不了。系统页没有沾满空间。</p><p>这个时候直接使用 mysqld 来启动，这个时候系统也是启动失败的，这个时候我就删除掉有问题的库。再次启动的时候就可以了。</p><pre><code>/usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib/mysql/plugin --user=mysql --skip-log-error --pid-file=/var/run/mysqld/mysqld.pid --socket=/var/lib/mysql/mysql.sock &amp;</code></pre><pre><code>018-11-15T02:25:26.216519Z 0 [ERROR] InnoDB: Datafile &#39;./itsf4_hn/wfexpression.ibd&#39; is corrupted. Cannot determine the space ID from the first 64 pages.2018-11-15T02:25:26.219646Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfform.ibd&#39; with space ID 24779, since the redo log references ./itsf4_hn/wfform.ibd with space ID 24505.2018-11-15T02:25:26.223857Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfjsstrategy.ibd&#39; with space ID 24780, since the redo log references ./itsf4_hn/wfjsstrategy.ibd with space ID 24506.2018-11-15T02:25:26.230234Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wflastsubmitlog.ibd&#39; with space ID 24781, since the redo log references ./itsf4_hn/wflastsubmitlog.ibd with space ID 24507.2018-11-15T02:25:26.247740Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wflatelyactor.ibd&#39; with space ID 24782, since the redo log references ./itsf4_hn/wflatelyactor.ibd with space ID 24508.2018-11-15T02:25:26.250235Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wflockinfo.ibd&#39; with space ID 24783, since the redo log references ./itsf4_hn/wflockinfo.ibd with space ID 24509.2018-11-15T02:25:26.252935Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfoperaterlog.ibd&#39; with space ID 24784, since the redo log references ./itsf4_hn/wfoperaterlog.ibd with space ID 24510.2018-11-15T02:25:26.261046Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wforgstrategy.ibd&#39; with space ID 24785, since the redo log references ./itsf4_hn/wforgstrategy.ibd with space ID 24511.2018-11-15T02:25:26.263893Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfparticipant.ibd&#39; with space ID 24786, since the redo log references ./itsf4_hn/wfparticipant.ibd with space ID 24512.2018-11-15T02:25:26.266675Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfprinter.ibd&#39; with space ID 24787, since the redo log references ./itsf4_hn/wfprinter.ibd with space ID 24513.2018-11-15T02:25:26.269732Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfprocess.ibd&#39; with space ID 24788, since the redo log references ./itsf4_hn/wfprocess.ibd with space ID 24514.2018-11-15T02:25:26.272724Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfprocessattach.ibd&#39; with space ID 24789, since the redo log references ./itsf4_hn/wfprocessattach.ibd with space ID 24515.2018-11-15T02:25:26.276628Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfprocessformprint.ibd&#39; with space ID 24790, since the redo log references ./itsf4_hn/wfprocessformprint.ibd with space ID 24516.2018-11-15T02:25:26.281096Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfprocessinstance.ibd&#39; with space ID 24791, since the redo log references ./itsf4_hn/wfprocessinstance.ibd with space ID 24517.2018-11-15T02:25:26.284610Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfprocessinstext.ibd&#39; with space ID 24792, since the redo log references ./itsf4_hn/wfprocessinstext.ibd with space ID 24518.2018-11-15T02:25:26.292722Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfrecycledata.ibd&#39; with space ID 24793, since the redo log references ./itsf4_hn/wfrecycledata.ibd with space ID 24519.2018-11-15T02:25:26.307107Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfroute.ibd&#39; with space ID 24794, since the redo log references ./itsf4_hn/wfroute.ibd with space ID 24520.2018-11-15T02:25:26.314730Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfselectstrategy.ibd&#39; with space ID 24795, since the redo log references ./itsf4_hn/wfselectstrategy.ibd with space ID 24521.2018-11-15T02:25:26.319170Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfshowstrategy.ibd&#39; with space ID 24796, since the redo log references ./itsf4_hn/wfshowstrategy.ibd with space ID 24522.2018-11-15T02:25:26.320955Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfsyscode.ibd&#39; with space ID 24797, since the redo log references ./itsf4_hn/wfsyscode.ibd with space ID 24523.2018-11-15T02:25:26.324213Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wftoread.ibd&#39; with space ID 24798, since the redo log references ./itsf4_hn/wftoread.ibd with space ID 24524.2018-11-15T02:25:26.335248Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfworkday.ibd&#39; with space ID 24799, since the redo log references ./itsf4_hn/wfworkday.ibd with space ID 24525.2018-11-15T02:25:26.338531Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfworkitemn.ibd&#39; with space ID 24800, since the redo log references ./itsf4_hn/wfworkitemn.ibd with space ID 24526.2018-11-15T02:25:26.341828Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfworkitemnlog.ibd&#39; with space ID 24801, since the redo log references ./itsf4_hn/wfworkitemnlog.ibd with space ID 24527.2018-11-15T02:25:26.344871Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfworkitemo.ibd&#39; with space ID 24802, since the redo log references ./itsf4_hn/wfworkitemo.ibd with space ID 24528.2018-11-15T02:25:26.350222Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wfworkoperationlog.ibd&#39; with space ID 24803, since the redo log references ./itsf4_hn/wfworkoperationlog.ibd with space ID 24529.2018-11-15T02:25:26.353173Z 0 [Note] InnoDB: Ignoring data file &#39;./itsf4_hn/wx_menu.ibd&#39; with space ID 24804, since the redo log references ./itsf4_hn/wx_menu.ibd with space ID 24530.2018-11-15T02:25:26.443005Z 0 [Note] InnoDB: Doing recovery: scanned up to log sequence number 73122030522018-11-15T02:25:26.597373Z 0 [Note] InnoDB: Database was not shutdown normally!2018-11-15T02:25:26.597401Z 0 [Note] InnoDB: Starting crash recovery.2018-11-15T02:25:26.598619Z 0 [ERROR] InnoDB: Tablespace 24778 was not found at ./itsf4_hn/wfexpression.ibd.2018-11-15T02:25:26.598635Z 0 [ERROR] InnoDB: Set innodb_force_recovery=1 to ignore this and to permanently lose all changes to the tablespace.2018-11-15T02:25:26.598663Z 0 [ERROR] InnoDB: Cannot continue operation.</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2018/11/06/mysql-jie-gou-dui-bi-gong-ju/"/>
      <url>/2018/11/06/mysql-jie-gou-dui-bi-gong-ju/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql-结构对比工具"><a href="#mysql-结构对比工具" class="headerlink" title="mysql 结构对比工具"></a>mysql 结构对比工具</h1><p>鄙人所在部门是一个做产品的部门，由于目前产品已经发展了到 <code>5.1</code> 的版本，有一客户目前在使用 <code>4.0</code> 的版本。因此，需要升级系统，且数据需要无缝契合。</p><p>市面上有2中工具一个是 <code>MySQL Utilities</code> 和 <code>AmpNmp.DatabaseCompare</code> </p><h3 id="MySQL-Utilities"><a href="#MySQL-Utilities" class="headerlink" title="MySQL Utilities"></a>MySQL Utilities</h3><p>是官方出品，支持三大平台，使用的 <code>python</code> 运行环境。</p><pre><code>mysqldiff --force --difftype=sql --server1=user:password@ip --server2=user:password@ip --changes-for=server2  server1_schema:server2_schema</code></pre><p>参数说明</p><pre><code>server1_schema server1对应的库名称server2_schema server2对应的库名称其他参数对号入座 user、password、ip</code></pre><p>对比的内容有基本的 </p><ul><li>sql 注释、字段长度、名称等。但是不智能的地方是竟然字段大小写不忽略（可能是由于没有读大小写忽略的配置）。</li><li>存储过程、函数、触发器、视图。</li><li>自增长的序列（竟然这个都有，这个对比的时候需要酌情考虑要不要同步，毕竟两个系统的数据量不同）</li><li>可列出 A 库中存在而 B 库不存在的，反之也显示。</li></ul><p>发现的 bug</p><ul><li>对比存储过程、函数的时候，认为所有的都有差异。尽管已经使用差异出来的 sql 执行过了。</li></ul><h3 id="AmpNmp-DatabaseCompare"><a href="#AmpNmp-DatabaseCompare" class="headerlink" title="AmpNmp.DatabaseCompare"></a>AmpNmp.DatabaseCompare</h3><p>没用过，据介绍这个是可视化的工具。具体请移步官网</p><h2 id="使用环境"><a href="#使用环境" class="headerlink" title="使用环境"></a>使用环境</h2><p>macOS 10.11.6<br>python 2.7</p><p>在使用的过程中发现无法运行 <code>mysqldiff</code> 原因是没有安装 <code>MySQL Connector</code><br>点击下面地址下载对应的工具 <a href="http://dev.mysql.com/downloads/connector/python/" target="_blank" rel="noopener">http://dev.mysql.com/downloads/connector/python/</a></p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>我使用的是下面2个工具<br>mysql-utilities-1.6.5-macos10.12.dmg<br>mysql-connector-python-2.0.5-osx10.9.dmg </p><p>可以使用 <a href="https://pan.baidu.com/s/1cV2rHVED2fZzVDl72bbPcw" target="_blank" rel="noopener">https://pan.baidu.com/s/1cV2rHVED2fZzVDl72bbPcw</a> 这地址下载</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://stackoverflow.com/questions/21781598/cant-run-mysql-utilities" target="_blank" rel="noopener">https://stackoverflow.com/questions/21781598/cant-run-mysql-utilities</a><br><a href="https://downloads.mysql.com/archives/utilities/" target="_blank" rel="noopener">https://downloads.mysql.com/archives/utilities/</a><br><a href="http://blog.sina.com.cn/s/blog_61d758500102w8ed.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_61d758500102w8ed.html</a><br><a href="https://blog.csdn.net/kikajack/article/details/81567248" target="_blank" rel="noopener">https://blog.csdn.net/kikajack/article/details/81567248</a><br><a href="http://ampnmp.com/database-compare/" target="_blank" rel="noopener">http://ampnmp.com/database-compare/</a><br><a href="http://seanlook.com/2017/08/05/mysql_mysqldiff/" target="_blank" rel="noopener">http://seanlook.com/2017/08/05/mysql_mysqldiff/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2018/10/01/macos-sheng-ji-10.14/"/>
      <url>/2018/10/01/macos-sheng-ji-10.14/</url>
      
        <content type="html"><![CDATA[<h1 id="macOS-升级-10-14"><a href="#macOS-升级-10-14" class="headerlink" title="macOS 升级 10.14"></a>macOS 升级 10.14</h1><p>我属于保守派，用来好久的 <code>10.11.6</code> ，看到新系统心里痒痒的。但是又是作为主力的工作电脑，升级后可能会挂掉。一直都就停留在了这里。终于等待了10月1日（迫不及待的给祖国母亲过生日），哈哈。迫不及待的升级了最新版本 <code>10.14</code>。记录一下初次体验。</p><blockquote><p>怕死的我重新用了一个新的移动硬盘整体备份了所有数据，不怕一万就怕万一。哈哈</p></blockquote><p>15年中的乞丐版<br><img src="http://img.lsof.fun/2018-10-07-15388910459029.jpg" alt="-c500"></p><p>经过国庆7天的使用，轻体验了下。</p><h2 id="1-优点"><a href="#1-优点" class="headerlink" title="1. 优点"></a>1. 优点</h2><p>下面说一下 <code>10.14</code> 的一些好玩的地方。可能这些特性在之前版本就有了。我是直接跳过了 <code>10.12</code> 、<code>10.13</code> 的。所以下面说的这些都是我觉得新奇的地方。</p><h3 id="1-1-存储空间变大了"><a href="#1-1-存储空间变大了" class="headerlink" title="1.1 存储空间变大了"></a>1.1 存储空间变大了</h3><p>在升级的时候还有 25G 左右，升级完成后竟然剩余了50多G，简直是乞丐版的救星（有可能我的电脑里面的重复文件较多，JAVAer 的 jar 包比较多 <del>_</del>）。多亏了新的 <code>APFS</code> 文件系统。有兴趣可以看一下 <a href="https://zhuanlan.zhihu.com/p/33656976" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/33656976</a></p><h3 id="1-2-可隐藏头部菜单栏"><a href="#1-2-可隐藏头部菜单栏" class="headerlink" title="1.2 可隐藏头部菜单栏"></a>1.2 可隐藏头部菜单栏</h3><p>这样我就可以全屏显示我的应用了（我 QQ 的消息都屏蔽掉了，安心编码，忘掉时间，忘掉解饿，晚点疲惫。哈哈），减少菜单栏上的其他信息影响。（其实在10.11就有了）<br>![Screen Shot 2018-10-01 at 22.02.51-c500](<a href="http://img.lsof.fun/2018-10-02-Screen" target="_blank" rel="noopener">http://img.lsof.fun/2018-10-02-Screen</a> Shot 2018-10-01 at 22.02.51.png)</p><h3 id="1-3-截图"><a href="#1-3-截图" class="headerlink" title="1.3 截图"></a>1.3 截图</h3><p>还是没有 QQ 截图好用，可以直接在上面编辑。不用在弹出一个框，不过也好过没有。不过你也可以用 QQ 独立的截图控件（<a href="http://jietu.qq.com/）" target="_blank" rel="noopener">http://jietu.qq.com/）</a></p><h2 id="2-缺点"><a href="#2-缺点" class="headerlink" title="2. 缺点"></a>2. 缺点</h2><h3 id="2-1-telnet-不见了"><a href="#2-1-telnet-不见了" class="headerlink" title="2.1 telnet 不见了"></a>2.1 telnet 不见了</h3><p>经过百度，<code>telnet</code> 在 <code>10.13</code> 版本就干掉了。<del>_</del>。可以通过 brew 下载回来</p><pre><code>brew install inetutils</code></pre><h3 id="2-2-貌似电池续航短了"><a href="#2-2-貌似电池续航短了" class="headerlink" title="2.2 貌似电池续航短了"></a>2.2 貌似电池续航短了</h3><p>休眠一个晚上掉电 10% 左右。进过搜寻资料，有一个帖子值得参考 <a href="https://www.jianshu.com/p/7b55f2bb3cbd" target="_blank" rel="noopener">https://www.jianshu.com/p/7b55f2bb3cbd</a></p><h3 id="2-3-开机慢"><a href="#2-3-开机慢" class="headerlink" title="2.3 开机慢"></a>2.3 开机慢</h3><p>开机灰常灰常慢，是 <code>10.11</code> 的5倍以上，也是没谁了。</p><h3 id="2-4-safri-插件失效"><a href="#2-4-safri-插件失效" class="headerlink" title="2.4 safri 插件失效"></a>2.4 safri 插件失效</h3><p>深信服的 vpn 插件失效了。</p><h3 id="2-5-mysql-数据连接工具"><a href="#2-5-mysql-数据连接工具" class="headerlink" title="2.5 mysql 数据连接工具"></a>2.5 mysql 数据连接工具</h3><ul><li>mysql workbench （6.3.9）可以连上数据库，但是出现语句的时候没响应。（升级到8.0版本即可，但是修改了运行的快捷键<del>_</del>，变成了 command + shift + enter 查询，原来的 command + shift + r 变成了执行数据库文件）</li><li>Navicat premium 11.0.20 相应非常缓慢</li><li>Navicat for Mysql 9.1.3 可以正常运行</li></ul><h3 id="2-6-卡"><a href="#2-6-卡" class="headerlink" title="2.6 卡"></a>2.6 卡</h3><p>主观感觉同样的工作状态下，比 <code>10.11</code> 要卡</p><h2 id="3-bug"><a href="#3-bug" class="headerlink" title="3. bug"></a>3. bug</h2><h3 id="3-1-鼠标无法滚动"><a href="#3-1-鼠标无法滚动" class="headerlink" title="3.1 鼠标无法滚动"></a>3.1 鼠标无法滚动</h3><p>外置的蓝牙鼠标和有适配器的鼠标都无法使用滚轮。鼠标是 罗技的 <code>M275</code> 和 <code>M336</code> 都没法使用滚轮。一开始还以为是罗技的套件驱动问题。（大 bug，有人说在辅助功能里面添加即可，但是我的辅助功能却用不了）</p><h3 id="3-2-休眠过久出现苹果加载页面"><a href="#3-2-休眠过久出现苹果加载页面" class="headerlink" title="3.2 休眠过久出现苹果加载页面"></a>3.2 休眠过久出现苹果加载页面</h3><p>休眠的时候，出现启动的时候的加载页面。不知道是啥原因。有点吓人</p><h3 id="3-3-无法在辅助功能中添加"><a href="#3-3-无法在辅助功能中添加" class="headerlink" title="3.3 无法在辅助功能中添加"></a>3.3 无法在辅助功能中添加</h3><p>三次询问苹果客服无果，决定还原到10.11.6。</p><h3 id="3-4-花屏"><a href="#3-4-花屏" class="headerlink" title="3.4 花屏"></a>3.4 花屏</h3><p>在没有接入外置显示器的时候，不是经常花屏。一旦接入了外置显示器，鼠标来回切换的时候就会花屏。</p><h3 id="3-5-log4j-无法使用"><a href="#3-5-log4j-无法使用" class="headerlink" title="3.5 log4j 无法使用"></a>3.5 log4j 无法使用</h3><p>项目是一个web 工程，使用的是 log4j(2.8.2) 来打印日志的，却发现日志只能在控制台中输出。写不到日志文件中去（部分可以写）</p><h3 id="3-6-切换输入法后无法再输入框中打字"><a href="#3-6-切换输入法后无法再输入框中打字" class="headerlink" title="3.6 切换输入法后无法再输入框中打字"></a>3.6 切换输入法后无法再输入框中打字</h3><p>在 QQ 中特别明显，就是切换在输入框的时候，光标已经在了，但是输入法打出来的字却在左下角显示，没有进去到输入框中区。</p><h2 id="4-还原后记（20181010）"><a href="#4-还原后记（20181010）" class="headerlink" title="4. 还原后记（20181010）"></a>4. 还原后记（20181010）</h2><p>还原的时候需要将磁盘格式化成 日志类的（不能是 APFS 格式的）。使用 TM 恢复超级慢，可能是由于机械硬盘的缘故吧，前后化了2个小时 200G 的数据，还原后得到一个惊喜，原本升级前是25G 的剩余空间，现在变成了70G+的存储空间了。开森。好吧，新系统也体验过了。各种不爽。也没有特别惊艳的功能。比如黑色。哈哈。期待更加稳定的版本后在升级。给大家提个醒，记得升级前要全部备份。</p><h2 id="5-再次升级到-10-14-5-20190715"><a href="#5-再次升级到-10-14-5-20190715" class="headerlink" title="5. 再次升级到 10.14.5 (20190715)"></a>5. 再次升级到 10.14.5 (20190715)</h2><p>好多软件都开始需要 10.12 以上的版本，秉承着相同 12、13、14 都是一个系列的，就还是升级到 14。升级完成后还是出现了无法在辅助功能中添加。但是看到了其他机友是找到的问题（膜拜大牛）。<a href="https://www.jianshu.com/p/fbf95b4d65de。还有其他有意思的" target="_blank" rel="noopener">https://www.jianshu.com/p/fbf95b4d65de。还有其他有意思的</a> quicklook （<a href="https://www.jianshu.com/p/af97b3850982）" target="_blank" rel="noopener">https://www.jianshu.com/p/af97b3850982）</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/2018/09/30/ie9-zai-da-kai-kong-zhi-tai-ke-yi-zheng-chang-jia-zai-ye-mian-fou-ze-jia-zai-shi-bai/"/>
      <url>/2018/09/30/ie9-zai-da-kai-kong-zhi-tai-ke-yi-zheng-chang-jia-zai-ye-mian-fou-ze-jia-zai-shi-bai/</url>
      
        <content type="html"><![CDATA[<h1 id="ie9-在打开控制台可以正常加载页面，否则加载失败"><a href="#ie9-在打开控制台可以正常加载页面，否则加载失败" class="headerlink" title="ie9 在打开控制台可以正常加载页面，否则加载失败"></a>ie9 在打开控制台可以正常加载页面，否则加载失败</h1><p>最近在调试个 bug，不开启控制台的话死活页面加载不出来。开启了控制台后页面就显示正常。<br>经过一顿搜索，得知在 ie9 下，如果不开启控制台的话，默认是没有 console 对象的，开启后则有。</p><p>汇总网上的解决方案，改造如下。新增 console.js，内容如下：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">try</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token string">'use strict'</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> _console <span class="token operator">=</span> g<span class="token punctuation">.</span>console <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'assert'</span><span class="token punctuation">,</span> <span class="token string">'clear'</span><span class="token punctuation">,</span> <span class="token string">'count'</span><span class="token punctuation">,</span> <span class="token string">'debug'</span><span class="token punctuation">,</span> <span class="token string">'dir'</span><span class="token punctuation">,</span> <span class="token string">'dirxml'</span><span class="token punctuation">,</span> <span class="token string">'exception'</span><span class="token punctuation">,</span> <span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token string">'group'</span><span class="token punctuation">,</span> <span class="token string">'groupCollapsed'</span><span class="token punctuation">,</span> <span class="token string">'groupEnd'</span><span class="token punctuation">,</span> <span class="token string">'info'</span><span class="token punctuation">,</span> <span class="token string">'log'</span><span class="token punctuation">,</span> <span class="token string">'profile'</span><span class="token punctuation">,</span> <span class="token string">'profileEnd'</span><span class="token punctuation">,</span> <span class="token string">'table'</span><span class="token punctuation">,</span> <span class="token string">'time'</span><span class="token punctuation">,</span> <span class="token string">'timeEnd'</span><span class="token punctuation">,</span> <span class="token string">'timeStamp'</span><span class="token punctuation">,</span> <span class="token string">'trace'</span><span class="token punctuation">,</span> <span class="token string">'warn'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> console <span class="token operator">=</span> <span class="token punctuation">{</span>version<span class="token punctuation">:</span> <span class="token string">'0.1.0'</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> key<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> methods<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            key <span class="token operator">=</span> methods<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            console<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> _console<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    Function<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>apply<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>_console<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> _console<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        g<span class="token punctuation">.</span>console <span class="token operator">=</span> console<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在具体页面引用的时候使用只有 ie9 才能识别的脚本</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--[if IE 9]>    &lt;script src="console.js" type="text/javascript">&lt;/script>&lt;![endif]--></span></code></pre><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://yanhaijing.com/javascript/2014/11/03/use-console.js/" target="_blank" rel="noopener">https://yanhaijing.com/javascript/2014/11/03/use-console.js/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2018/09/24/yi-ci-shu-ju-ku-lian-jie-xie-lu-cha-zhao/"/>
      <url>/2018/09/24/yi-ci-shu-ju-ku-lian-jie-xie-lu-cha-zhao/</url>
      
        <content type="html"><![CDATA[<h1 id="一次数据库连接泄露查找"><a href="#一次数据库连接泄露查找" class="headerlink" title="一次数据库连接泄露查找"></a>一次数据库连接泄露查找</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>有一老项目，在最近出现了耗尽连接数报错。基本半天就会爆掉了。（还部署了双机，更加加快了耗尽连接数的速度）。把代码下载下来的时候吃了一惊，这项目竟然没用数据库连接池。直接使用了这货 <code>org.springframework.jdbc.datasource.DriverManagerDataSource</code>。这货是没有连接池概念的，来一个就创建一个。</p><p><img src="http://img.lsof.fun/2018-09-24-15377557097437.jpg" alt="-c200"></p><p>那为什么还会连接数耗尽呢？经过调试，发现刷新三观的获取连接的方式。</p><blockquote><p>代码我就不上了，简单说一下。这个函数的目的是拿到数据库原生连接对象。首先先获取配置好的 DataSource，通过 DataSource 来获取用户名、密码、驱动 <del>_</del>，然后在通用这些 create 一个 Connection。这 TM 是临时工做的吧。</p></blockquote><p>另外有是这样的</p><pre class=" language-java"><code class="language-java">Session session <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//后面没有关闭</span></code></pre><p>还有这样的</p><pre class=" language-java"><code class="language-java">Connection connection <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">connection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//也没有关闭</span></code></pre><p>这样的 <code>Session</code> 获取方式 <code>Hibernate</code> 是不会进行管理的了。也就是说要手动关闭。需要改动的地方太多了（而且修改后需要大量的测试，得不偿失）。需要想一个办法来解决这个问题。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>经过研究，决定从 <code>DataSource</code> 对象下手。前提条件需要可以判断这个连接空闲的时间。使用 mysql 命令可以查看到当前线程数。<br><img src="http://img.lsof.fun/2018-09-24-15377673023807.jpg" alt="-c500"><br>查看 JDBC 的规范，并没有连接最后执行时间的方法。<br><img src="http://img.lsof.fun/2018-09-24-95_047bc205625b0b30-1ec21c4782d02bf2-dcadbe84ab9fad4514af544849194203.jpg" alt="-c"></p><p>最后从 Mysql 的驱动实现下手。 <code>com.mysql.jdbc.Connection</code> 里面有个方法叫 <code>getIdleFor</code>，实现类在 <code>com.mysql.jdbc.ConnectionImpl</code>。这个方法可以知道当前连接最后执行完成 sql 语句后的等待时间。</p><p>上代码</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>Log<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>LogFactory<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>Connection<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>SQLException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 无连接池功能，仅仅是因为代码中有巨多不规范代码导致开启了数据库链接没有关闭导致连接数耗尽 bug 修复. * * @author jerry * @date 2018 -09-24 18:07:48 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataSource4FixedConnLeak</span> <span class="token keyword">extends</span> <span class="token class-name">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>datasource<span class="token punctuation">.</span>DriverManagerDataSource</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Log LOG <span class="token operator">=</span> LogFactory<span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span>DataSource4FixedConnLeak<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> List<span class="token operator">&lt;</span>Connection<span class="token operator">></span> cacheConn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>Connection<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        Timer timer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        TimerTask task <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TimerTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>cacheConn<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        Iterator<span class="token operator">&lt;</span>Connection<span class="token operator">></span> iterator <span class="token operator">=</span> cacheConn<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            Connection next <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>next<span class="token punctuation">.</span><span class="token function">isClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                iterator<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Connection connection <span class="token operator">=</span> <span class="token punctuation">(</span>com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Connection<span class="token punctuation">)</span> next<span class="token punctuation">;</span>                                <span class="token comment" spellcheck="true">//空闲100毫秒就关闭</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>connection<span class="token punctuation">.</span><span class="token function">getIdleFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> 500l<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//                                    LOG.info("isAlive close");</span>                                    connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    iterator<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    LOG<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        timer<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> 500L<span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">*</span> 2l<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addConnection</span><span class="token punctuation">(</span>Connection connection<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>cacheConn<span class="token punctuation">)</span> <span class="token punctuation">{</span>            cacheConn<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Connection <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        <span class="token keyword">final</span> Connection connection <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">addConnection</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> connection<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="扩展知识"><a href="#扩展知识" class="headerlink" title="扩展知识"></a>扩展知识</h2><p>经过 <code>Hibernate</code> 调用的创建的 <code>Connection</code> 都会进行关闭。（脱离管理的 Session 不在范围内）以下是 <code>org.springframework.orm.hibernate3.HibernateTemplate</code> 的执行查询代码片段。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Execute the action specified by the given action object within a Session. * @param action callback object that specifies the Hibernate action * @param enforceNewSession whether to enforce a new Session for this template * even if there is a pre-bound transactional Session * @param enforceNativeSession whether to enforce exposure of the native * Hibernate Session to callback code * @return a result object returned by the action, or &lt;code>null&lt;/code> * @throws org.springframework.dao.DataAccessException in case of Hibernate errors */</span><span class="token keyword">protected</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">doExecute</span><span class="token punctuation">(</span>HibernateCallback<span class="token operator">&lt;</span>T<span class="token operator">></span> action<span class="token punctuation">,</span> <span class="token keyword">boolean</span> enforceNewSession<span class="token punctuation">,</span> <span class="token keyword">boolean</span> enforceNativeSession<span class="token punctuation">)</span>        <span class="token keyword">throws</span> DataAccessException <span class="token punctuation">{</span>    Assert<span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> <span class="token string">"Callback object must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Session session <span class="token operator">=</span> <span class="token punctuation">(</span>enforceNewSession <span class="token operator">?</span>            SessionFactoryUtils<span class="token punctuation">.</span><span class="token function">getNewSession</span><span class="token punctuation">(</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getEntityInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">boolean</span> existingTransaction <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">!</span>enforceNewSession <span class="token operator">&amp;&amp;</span>            <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAllowCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> SessionFactoryUtils<span class="token punctuation">.</span><span class="token function">isSessionTransactional</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>existingTransaction<span class="token punctuation">)</span> <span class="token punctuation">{</span>        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Found thread-bound Session for HibernateTemplate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    FlushMode previousFlushMode <span class="token operator">=</span> null<span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        previousFlushMode <span class="token operator">=</span> <span class="token function">applyFlushMode</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> existingTransaction<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">enableFilters</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>        Session sessionToExpose <span class="token operator">=</span>                <span class="token punctuation">(</span>enforceNativeSession <span class="token operator">||</span> <span class="token function">isExposeNativeSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> session <span class="token operator">:</span> <span class="token function">createSessionProxy</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        T result <span class="token operator">=</span> action<span class="token punctuation">.</span><span class="token function">doInHibernate</span><span class="token punctuation">(</span>sessionToExpose<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">flushIfNecessary</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> existingTransaction<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">HibernateException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token function">convertHibernateAccessException</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token function">convertJdbcAccessException</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// Callback code threw application exception...</span>        <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">finally</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>existingTransaction<span class="token punctuation">)</span> <span class="token punctuation">{</span>            logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Not closing pre-bound Hibernate Session after HibernateTemplate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">disableFilters</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>previousFlushMode <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                session<span class="token punctuation">.</span><span class="token function">setFlushMode</span><span class="token punctuation">(</span>previousFlushMode<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// Never use deferred close for an explicitly new Session.</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAlwaysUseNewSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                SessionFactoryUtils<span class="token punctuation">.</span><span class="token function">closeSession</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//close Connection</span>                SessionFactoryUtils<span class="token punctuation">.</span><span class="token function">closeSessionOrRegisterDeferredClose</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>关闭方法运行堆栈</p><pre><code>at org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:474)at org.hibernate.jdbc.ConnectionManager.cleanup(ConnectionManager.java:408)at org.hibernate.jdbc.ConnectionManager.close(ConnectionManager.java:347)at org.hibernate.impl.SessionImpl.close(SessionImpl.java:335)at org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:802)at org.springframework.orm.hibernate3.SessionFactoryUtils.closeSessionOrRegisterDeferredClose(SessionFactoryUtils.java:788)at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:434)at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)at org.springframework.orm.hibernate3.HibernateTemplate.get(HibernateTemplate.java:512)at org.springframework.orm.hibernate3.HibernateTemplate.get(HibernateTemplate.java:506)</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2018/09/17/wei-xin-fan-hui-an-niu-hong-fa-guan-bi-android-he-ios-du-zhi-chi/"/>
      <url>/2018/09/17/wei-xin-fan-hui-an-niu-hong-fa-guan-bi-android-he-ios-du-zhi-chi/</url>
      
        <content type="html"><![CDATA[<h1 id="微信返回按钮触发关闭（android-和-iOS-都支持）"><a href="#微信返回按钮触发关闭（android-和-iOS-都支持）" class="headerlink" title="微信返回按钮触发关闭（android 和 iOS 都支持）"></a>微信返回按钮触发关闭（android 和 iOS 都支持）</h1><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>微信认证需要跳转多层页面，这个这个时候如果用户点击返回的话就会在这个几个页面中循环跳来跳去的（比如登陆成功后，我们去到首页，这个时候用户用完后点击了返回。就又去掉了登陆页面去了），so，我们需要用户返回到登陆页面的时候就认为用需要关闭页面。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>进过多次试验得出结果如下<br>android 的页面放回每次都是刷新页面的，iOS 的返回是缓存的，不刷新页面。但是我们想要的效果是返回到指定页面的时候就触发关闭操作</p><p>一轮搜索，都是介绍使用监听 <code>popstate</code> 方法来实现，在 android 上的</p><p>2次就会回到指定链接</p><p>进入2此之后，就触发不了popstate事件了（经过测试，如果这个时候的返回页面就是你在 history.pushState 的页面地址，也就是说会重新载入这个页面，也就没有 popstate 什么事了）<br>history.pushState(null, null, “index4menu.jsp?xxxx”); 还会缓存</p><p>window.addEventListener(‘pageshow’, function () {<br>在点了2次以上的页面依旧会触发，但是却关闭不了页面</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>结合 <code>sessionStorage</code> 的特性（当前地址有页面打开的时候就存在，关闭就删除），我们使用一个变量存储在这个里面，一开始的时候就存储标记为，等到再次返回的时候触发到这个标记位后就关闭页面。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>先引入微信 js </p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://res.wx.qq.com/open/js/jweixin-1.0.0.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>示例代码</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> common <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*** （WeixinJSBridge）微信内置对象不是一开始就加载的，需要做回调，*  jerry dai 20180917*/</span>common<span class="token punctuation">.</span>wechatJSBridgeReady <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> WeixinJSBridge <span class="token operator">==</span> <span class="token string">"object"</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> WeixinJSBridge<span class="token punctuation">.</span>invoke <span class="token operator">==</span> <span class="token string">"function"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>addEventListener<span class="token punctuation">)</span> <span class="token punctuation">{</span>            document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"WeixinJSBridgeReady"</span><span class="token punctuation">,</span> callback<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>attachEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>            document<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">"WeixinJSBridgeReady"</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>            document<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">"onWeixinJSBridgeReady"</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/** * 触发微信返回的时候关闭当前页面函数（主要用于登陆成功后跳转，在点击退回的时候发现停留在了跳转页面中） * @param key 缓存的 key（主要用于多个页面跳转的时候不冲突使用，不传递默认是isClose ） * @param fnOnSetFlagCallback 设置关闭标记的时候回调（主要用户控制页面的逻辑初始化） * @param fnCloseCallback 关闭的时候回调 * jerry dai 20180917 */</span>common<span class="token punctuation">.</span>goBackCloseWechatWindow <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>key<span class="token punctuation">,</span> fnOnSetFlagCallback<span class="token punctuation">,</span> fnCloseCallback<span class="token punctuation">)</span> <span class="token punctuation">{</span>    key <span class="token operator">=</span> key <span class="token operator">||</span> <span class="token string">"isClose"</span><span class="token punctuation">;</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'pageshow'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> isClose <span class="token operator">=</span> sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// alert(key+":"+isClose+", "+window.location.href)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> isClose <span class="token operator">==</span> <span class="token string">"true"</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token punctuation">(</span>fnCloseCallback <span class="token operator">&amp;&amp;</span> fnCloseCallback<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            common<span class="token punctuation">.</span><span class="token function">wechatJSBridgeReady</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                WeixinJSBridge<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">'closeWindow'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">(</span>fnOnSetFlagCallback <span class="token operator">&amp;&amp;</span> fnOnSetFlagCallback<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/Tencent/weui/wiki/微信JSAPI" target="_blank" rel="noopener">https://github.com/Tencent/weui/wiki/微信JSAPI</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2018/09/10/niss-shi-yong-guan-li-yuan-yun-xing/"/>
      <url>/2018/09/10/niss-shi-yong-guan-li-yuan-yun-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="NISS-使用管理员运行"><a href="#NISS-使用管理员运行" class="headerlink" title="NISS 使用管理员运行"></a>NISS 使用管理员运行</h1><p>我需要执行一个命令，但是这个命令需要管理员权限才可以运行。</p><pre><code>Name &quot;${PRODUCT_NAME} ${PRODUCT_VERSION}&quot;OutFile &quot;xxxxx&quot;InstallDir &quot;xxxxx&quot;InstallDirRegKey HKLM &quot;${PRODUCT_UNINST_KEY}&quot; &quot;UninstallString&quot;ShowInstDetails showShowUnInstDetails showRequestExecutionLevel admin</code></pre><p>加入 RequestExecutionLevel admin 这句，在执行 mklink 的时候如下：</p><pre><code>ExecWait &#39;cmd /c mklink /D &quot;D:\test02&quot; &quot;D:\test01&quot;&#39;</code></pre><p>注意：运行 <code>exe</code> 的时候需要右键使用管理员运行。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://nsis-dev.github.io/NSIS-Forums/html/t-314525.html" target="_blank" rel="noopener">https://nsis-dev.github.io/NSIS-Forums/html/t-314525.html</a><br><a href="http://www.it610.com/article/1835566.htm" target="_blank" rel="noopener">http://www.it610.com/article/1835566.htm</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2018/09/10/window-ruan-lian-jie-fang-an/"/>
      <url>/2018/09/10/window-ruan-lian-jie-fang-an/</url>
      
        <content type="html"><![CDATA[<h1 id="window软连接方案"><a href="#window软连接方案" class="headerlink" title="window软连接方案"></a>window软连接方案</h1><p>如果你希望把一个目录在多个地方都可以访问。</p><blockquote><p>我这里说的访问是指比如：目标目录 d:\dir1，但是我希望使用 c:\dir1 来访问到这个目录。</p></blockquote><p>有人说，用一个快捷方式就 OK 啦，快捷方式只是作为跳转过去的，不能做到我说的这种效果。主要有的场景有，</p><ol><li>你的 C 盘爆了。但是相关的引用有需要在 C 盘，这个时候这个就可以做到。</li><li>开发程序的时候，你需要把固定目录挂载到 classpath 下面，（这种需求在 linux 下是很简单就可以做到），如果部署多机器集群的话，没有用文件服务器的话。共享应用之间的数据文件就会麻烦。（也可以使用文件同步来解决）。这个也可以做到。</li></ol><blockquote><p>我主要是解决第二个问题，我们的量还没有达到需要使用文件服务器。基本通过这种方式是可以解决当前问题了。</p></blockquote><h2 id="命令说明"><a href="#命令说明" class="headerlink" title="命令说明"></a>命令说明</h2><pre><code>mklink /D &quot;link_name&quot; &quot;src_dir&quot;</code></pre><p>link_name 可以是一个具体的全路径的文件夹<br>src_dir 映射的目录</p><h2 id="其他方案"><a href="#其他方案" class="headerlink" title="其他方案"></a>其他方案</h2><p>可以使用 <code>Junction</code>，不过这个工具需要下载一个 exe，mklink是 window 自带的命令。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/sunzhenhua0608/article/details/9311241" target="_blank" rel="noopener">https://blog.csdn.net/sunzhenhua0608/article/details/9311241</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2018/09/04/da-jian-ngrok-fu-wu/"/>
      <url>/2018/09/04/da-jian-ngrok-fu-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建ngrok服务"><a href="#搭建ngrok服务" class="headerlink" title="搭建ngrok服务"></a>搭建ngrok服务</h1><p>ngrok 是什么，请看官网 <a href="http://ngrok.cn/" target="_blank" rel="noopener">http://ngrok.cn/</a>，简单来说就是一个可以把你的应用暴露到互联网中。</p><blockquote><p>开发过微信的童鞋都知道，微信一定要有域名和独占80端口的。然而调试的时候只能上到服务器上调试。所以你要练就一次编写，处处无 bug 的境界才可以。否则，你的代码会出现一堆的日志打印来调试。</p></blockquote><p>使用 ngrok 之后，你就可以在你本地调试开发了。因为这个使用的三级域名做转发。也就是说只要你的带宽顶得住。你是可以开无数个映射的。比如说：ngrok.xxxx.com 是你设置的二级域名。你希望下面的三级域名做转发。也就是说 a.ngrok.xxxx.com 可以映射一个应用，b.ngrok.xxxx.com 也可以映射另外的一个应用。</p><h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><ul><li>首先你得有一个外网域名（备案过的）</li><li>此次你要有一个外网的虚拟主机（我的是帮瓦工最低配版本，$19/year，1核 512G内存 500G/月带宽）</li></ul><blockquote><p>如果你只有域名肿么办，还是有办法的。你可以低成本的去买一个别人已经搭好的 ngrok。比如 <a href="https://www.ngrok.cc/" target="_blank" rel="noopener">https://www.ngrok.cc/</a>，为什么说要有域名呢？业务他们家提供的域名已经被微信禁止使用了。<br>题外话：建议大家搞一个域名，因为你永远不知道一个小公司申请一个域名多麻烦。哈哈。</p></blockquote><h2 id="配置网络解析"><a href="#配置网络解析" class="headerlink" title="配置网络解析"></a>配置网络解析</h2><p>去到你的域名提供商。在解析中增加 A 类的映射。</p><ol><li>将 ngrok.xxxx.com 映射到你的外网服务器 ip 上。</li><li>*.ngrok.xxxx.com 同样映射到此外网 ip 上。</li></ol><h2 id="安装（Centos7）"><a href="#安装（Centos7）" class="headerlink" title="安装（Centos7）"></a>安装（Centos7）</h2><p>其实已经有大神们弄好了一键安装 <a href="https://github.com/sunnyos/ngrok" target="_blank" rel="noopener">https://github.com/sunnyos/ngrok</a>，步骤也超级简单。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.jianshu.com/p/b81bb6a3c0b9" target="_blank" rel="noopener">https://www.jianshu.com/p/b81bb6a3c0b9</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2018/08/08/mysql-tong-guo-fen-ge-fu-pi-pei/"/>
      <url>/2018/08/08/mysql-tong-guo-fen-ge-fu-pi-pei/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql通过分隔符匹配"><a href="#mysql通过分隔符匹配" class="headerlink" title="mysql通过分隔符匹配"></a>mysql通过分隔符匹配</h1><p>存储的时候，一对多的时候，一个字段使用逗号分隔多个值，发现使用 INSTR 会出现问题，比如<br>admin1,admin2 这个时候如果使用 INSTR 来匹配是会匹配上的。这个时候就需要自定义函数来切割数据。因此就有了如下的函数（老夫已经多年没有写过 mysql 的函数了。如有 bug，那你来打我呀。）</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 增加了函数判断方法</span><span class="token keyword">DROP</span> <span class="token keyword">function</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>F_INSTR_FOR_SEPARATOR<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">DELIMITER</span> $$<span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> <span class="token punctuation">`</span>F_INSTR_FOR_SEPARATOR<span class="token punctuation">`</span><span class="token punctuation">(</span>    userIds <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    matchUserId <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    _separator <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">CHARSET</span> utf8<span class="token keyword">BEGIN</span>    <span class="token comment" spellcheck="true">-- 待匹配的字符</span>    <span class="token keyword">declare</span> tempUserIds <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">default</span> userIds<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">-- 循环次数</span>    <span class="token keyword">declare</span> _count <span class="token keyword">INTEGER</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">-- 分隔出来的字符</span>    <span class="token keyword">declare</span> _tempUserId <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">-- 是否匹配了</span>    <span class="token keyword">declare</span> _isMatch <span class="token keyword">INTEGER</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">-- 定义分隔符好</span>    <span class="token keyword">declare</span> _tempSeparator <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">','</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">-- 获取里面有多少个分隔符，用于循环</span>    <span class="token keyword">select</span> <span class="token number">1</span><span class="token operator">+</span><span class="token punctuation">(</span>length<span class="token punctuation">(</span>userIds<span class="token punctuation">)</span> <span class="token operator">-</span> length<span class="token punctuation">(</span>replace<span class="token punctuation">(</span>userIds<span class="token punctuation">,</span>_tempSeparator<span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">into</span> _count<span class="token punctuation">;</span>    <span class="token keyword">WHILE</span> _count <span class="token operator">>=</span> <span class="token number">0</span> <span class="token keyword">DO</span>        <span class="token comment" spellcheck="true">-- 找到第一个被分隔的字符进行匹配</span>        <span class="token keyword">SELECT</span> SUBSTRING_INDEX<span class="token punctuation">(</span>tempUserIds<span class="token punctuation">,</span> _tempSeparator<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">into</span> _tempUserId<span class="token punctuation">;</span>        <span class="token keyword">if</span> matchUserId <span class="token operator">=</span> _tempUserId <span class="token keyword">then</span>             <span class="token keyword">set</span> _isMatch <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">-- 去掉上面已经批评过的字符</span>        <span class="token keyword">SELECT</span> SUBSTRING<span class="token punctuation">(</span>tempUserIds<span class="token punctuation">,</span> INSTR<span class="token punctuation">(</span>tempUserIds<span class="token punctuation">,</span>_tempSeparator<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">into</span> tempUserIds<span class="token punctuation">;</span>        <span class="token keyword">set</span> _count <span class="token operator">=</span> _count<span class="token number">-1</span><span class="token punctuation">;</span>    <span class="token keyword">END</span> <span class="token keyword">WHILE</span><span class="token punctuation">;</span><span class="token keyword">RETURN</span> _isMatch<span class="token punctuation">;</span><span class="token keyword">END</span>$$<span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2018/05/30/javascript-mo-kuai-hua-bian-cheng/"/>
      <url>/2018/05/30/javascript-mo-kuai-hua-bian-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript-模块化编程"><a href="#JavaScript-模块化编程" class="headerlink" title="JavaScript 模块化编程"></a>JavaScript 模块化编程</h1><p>转载于 <a href="https://www.kancloud.cn/kancloud/javascript-standards-reference/46490" target="_blank" rel="noopener">https://www.kancloud.cn/kancloud/javascript-standards-reference/46490</a></p><p>随着网站逐渐变成”互联网应用程序”，嵌入网页的JavaiScript代码越来越庞大，越来越复杂。网页越来越像桌面程序，需要一个团队分工协作、进度管理、单元测试等等……开发者不得不使用软件工程的方法，管理网页的业务逻辑。</p><p>JavaScript模块化编程，已经成为一个迫切的需求。理想情况下，开发者只需要实现核心的业务逻辑，其他都可以加载别人已经写好的模块。</p><p>但是，JavaScript不是一种模块化编程语言，ES5不支持”类”（class），更遑论”模块”（module）了。ES6正式支持”类”和”模块”，但还没有成为主流。JavaScript社区做了很多努力，在现有的运行环境中，实现模块的效果。</p><h2 id="原始写法"><a href="#原始写法" class="headerlink" title="原始写法"></a>原始写法</h2><p>模块就是实现特定功能的一组方法。只要把不同的函数（以及记录状态的变量）简单地放在一起，就算是一个模块。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">m1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//...</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">m2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//...</span><span class="token punctuation">}</span></code></pre><p>上面的函数 <code>m1()</code>和 <code>m2()</code>，组成一个模块。使用的时候，直接调用就行了。</p><p>这种做法的缺点很明显：”污染”了全局变量，无法保证不与其他模块发生变量名冲突，而且模块成员之间看不出直接关系。</p><h2 id="对象写法"><a href="#对象写法" class="headerlink" title="对象写法"></a>对象写法</h2><p>为了解决上面的缺点，可以把模块写成一个对象，所有的模块成员都放到这个对象里面。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> module1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">{</span>　_count <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>　m1 <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>　　<span class="token comment" spellcheck="true">//...</span>　<span class="token punctuation">}</span><span class="token punctuation">,</span>　m2 <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  　<span class="token comment" spellcheck="true">//...</span>　<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>上面的函数m1()和m2(），都封装在module1对象里。使用的时候，就是调用这个对象的属性。</p><pre class=" language-javascript"><code class="language-javascript">module1<span class="token punctuation">.</span><span class="token function">m1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>但是，这样的写法会暴露所有模块成员，内部状态可以被外部改写。比如，外部代码可以直接改变内部计数器的值。</p><pre class=" language-javascript"><code class="language-javascript">module1<span class="token punctuation">.</span>_count <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></code></pre><h2 id="立即执行函数写法"><a href="#立即执行函数写法" class="headerlink" title="立即执行函数写法"></a>立即执行函数写法</h2><p>使用”立即执行函数”（Immediately-Invoked Function Expression，IIFE），可以达到不暴露私有成员的目的。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> module1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>　<span class="token keyword">var</span> _count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>　<span class="token keyword">var</span> m1 <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>　  <span class="token comment" spellcheck="true">//...</span>　<span class="token punctuation">}</span><span class="token punctuation">;</span>　<span class="token keyword">var</span> m2 <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>　　<span class="token comment" spellcheck="true">//...</span>　<span class="token punctuation">}</span><span class="token punctuation">;</span>　<span class="token keyword">return</span> <span class="token punctuation">{</span>　　m1 <span class="token punctuation">:</span> m1<span class="token punctuation">,</span>　　m2 <span class="token punctuation">:</span> m2　<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>使用上面的写法，外部代码无法读取内部的_count变量。</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>module1<span class="token punctuation">.</span>_count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//undefined</span></code></pre><p>module1就是JavaScript模块的基本写法。下面，再对这种写法进行加工。</p><h2 id="放大模式"><a href="#放大模式" class="headerlink" title="放大模式"></a>放大模式</h2><p>如果一个模块很大，必须分成几个部分，或者一个模块需要继承另一个模块，这时就有必要采用”放大模式”（augmentation）。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> module1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>mod<span class="token punctuation">)</span><span class="token punctuation">{</span>　mod<span class="token punctuation">.</span>m3 <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>　　<span class="token comment" spellcheck="true">//...</span>　<span class="token punctuation">}</span><span class="token punctuation">;</span>　<span class="token keyword">return</span> mod<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>module1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>上面的代码为module1模块添加了一个新方法m3()，然后返回新的module1模块。</p><h2 id="宽放大模式（Loose-augmentation）"><a href="#宽放大模式（Loose-augmentation）" class="headerlink" title="宽放大模式（Loose augmentation）"></a>宽放大模式（Loose augmentation）</h2><p>在浏览器环境中，模块的各个部分通常都是从网上获取的，有时无法知道哪个部分会先加载。如果采用上一节的写法，第一个执行的部分有可能加载一个不存在空对象，这时就要采用”宽放大模式”。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> module1 <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>mod<span class="token punctuation">)</span><span class="token punctuation">{</span>　<span class="token comment" spellcheck="true">//...</span>　<span class="token keyword">return</span> mod<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>module1 <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>与”放大模式”相比，＂宽放大模式＂就是”立即执行函数”的参数可以是空对象。</p><h2 id="输入全局变量"><a href="#输入全局变量" class="headerlink" title="输入全局变量"></a>输入全局变量</h2><p>独立性是模块的重要特点，模块内部最好不与程序的其他部分直接交互。</p><p>为了在模块内部调用全局变量，必须显式地将其他变量输入模块。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> module1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>$<span class="token punctuation">,</span> YAHOO<span class="token punctuation">)</span> <span class="token punctuation">{</span>　<span class="token comment" spellcheck="true">//...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">,</span> YAHOO<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>上面的module1模块需要使用jQuery库和YUI库，就把这两个库（其实是两个模块）当作参数输入module1。这样做除了保证模块的独立性，还使得模块之间的依赖关系变得明显。</p><h2 id="使用构造函数封装私有变量"><a href="#使用构造函数封装私有变量" class="headerlink" title="使用构造函数封装私有变量"></a>使用构造函数封装私有变量</h2><p>可以利用构造函数，封装私有变量。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> buffer <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>add <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>        buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>toString <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> buffer<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>这种方法将私有变量封装在构造函数中，违反了构造函数与实例对象相分离的原则。并且，非常耗费内存。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>_buffer <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span>StringBuilder<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>    constructor<span class="token punctuation">:</span> StringBuilder<span class="token punctuation">,</span>    add<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>_buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    toString<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_buffer<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>这种方法将私有变量放入实例对象中，好处是看上去更自然，但是它的私有变量可以从外部读写，不是很安全。</p><h2 id="IIFE封装私有变量"><a href="#IIFE封装私有变量" class="headerlink" title="IIFE封装私有变量"></a>IIFE封装私有变量</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// open IIFE</span>    <span class="token comment" spellcheck="true">// public</span>    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token punctuation">{</span>        publicMethod<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            privateData <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span>            <span class="token function">privateFunction</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        publicData<span class="token punctuation">:</span> <span class="token operator">...</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// private</span>    <span class="token keyword">var</span> privateData <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">privateFunction</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        privateData <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span>        self<span class="token punctuation">.</span>publicData <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span>        self<span class="token punctuation">.</span><span class="token function">publicMethod</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> self<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// close IIFE</span></code></pre><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://jerryzou.com/posts/jsmodular/" target="_blank" rel="noopener">http://jerryzou.com/posts/jsmodular/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2018/05/29/jquery-cha-jian-kai-fa-mian-xiang-dui-xiang/"/>
      <url>/2018/05/29/jquery-cha-jian-kai-fa-mian-xiang-dui-xiang/</url>
      
        <content type="html"><![CDATA[<h1 id="jQuery插件开发-面向对象"><a href="#jQuery插件开发-面向对象" class="headerlink" title="jQuery插件开发-面向对象"></a>jQuery插件开发-面向对象</h1><p>最近在做一个 OA 项目，需要重写整个前端页面。一开始整个工作并非是我牵头主导开发，缺少思考。导致后面扩展、开发困难。以至于牵一发动全身。总结一下经验。让童鞋开发的时候好注意一下。（因为这个锅现在是我背，我需要优化。。。）</p><p>我们如果做面向对象开发的时候，我们知道，一切皆对象。内部的封装细节我们都不需要知道，我们只要知道外部调用逻辑即可。基于这种思想我们也可以套用到前端的 JavaScript 中去。用过很多前端控件的童鞋都知道，在使用这些控件的时候提供很多切面方法给我们回调使用来实现定制需求。以下介绍也是围绕着此处展开。</p><h2 id="插件实现想法"><a href="#插件实现想法" class="headerlink" title="插件实现想法"></a>插件实现想法</h2><p>提供丰富的切面方法，如果是一个树形控件对象封装，基本要提供获一下方法</p><ul><li>获取数据源回调方法（用于构建树形结构数据）</li><li>实例创建成功方法回调</li><li>点击选择事件回调</li><li>多选选中事件回调</li></ul><p>。。。等。</p><p>以上只是列举了部分业务场景需要用的方法。详细需要自行结合业务需求。</p><p>这样的话使用此控件人只需要组合这些切面方法就可以使用该有的功能。其他细节不需要处理。按照功能性的不同提供差异化的接口处理方式。但是更加建议在一套系统中插件提供的切面处理是一致的（因为业务千变万化，实际操作中可能做不到。）</p><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><h3 id="常用实现方式"><a href="#常用实现方式" class="headerlink" title="常用实现方式"></a>常用实现方式</h3><p>最常用的方法是在对象实例化的时候把相关切面方法带入到指定的参数中去，如下：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#test'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tree</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    on<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/**         * 点击事件触发的回调方法（单选是点击节点触发，多选是勾选时触发）         * @param self 当前对象         * @param treeNode 点击的节点         * @param clickItemObj 选中的对象信息         */</span>        onClickItem<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>self<span class="token punctuation">,</span> treeNode<span class="token punctuation">,</span> clickItemObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">/**         * 获取构建 ztree 的数据，数据结构和 ztree 要求的格式一致         * @param callback 构建好的数据回调（必须）         */</span>        onGetTreeData<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        onHide <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        onChange <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        onInitAfter <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这种更多是用于和此对象非常结合很紧密的场景。需要拿到对象的实例化权利才可以做到。</p><h3 id="基于-jQuery-data-对象注册方式"><a href="#基于-jQuery-data-对象注册方式" class="headerlink" title="基于 jQuery data 对象注册方式"></a>基于 jQuery data 对象注册方式</h3><p>适用场景：你无法掌控对象的创建（也就是没办法在初始化的时候就载入切面回调方法）。或者说你无法提供在初始化的时候个性化切面方法的需求就可以采用这个方式了。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#test'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">'callback'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    on<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/**         * 点击事件触发的回调方法（单选是点击节点触发，多选是勾选时触发）         * @param self 当前对象         * @param treeNode 点击的节点         * @param clickItemObj 选中的对象信息         */</span>        onClickItem<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>self<span class="token punctuation">,</span> treeNode<span class="token punctuation">,</span> clickItemObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">/**         * 获取构建 ztree 的数据，数据结构和 ztree 要求的格式一致         * @param callback 构建好的数据回调（必须）         */</span>        onGetTreeData<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        onHide <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        onChange <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        onInitAfter <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这里留有缺陷，就如果一个对象被多次调用以上方法的话。只会保留最后一个对象。（这里可以改动先判断是否有对象，有对象就变成一个 list，代码我懒得改了 -_-）。</p><p>在使用此方法注册切面方法的时候需要在编写插件的时候去获取 <code>data</code> 对象里面的方法进行回调</p><p>以上只是提供一种思路，具体还有很多实现方式的。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>jQuery data 对象介绍 <a href="https://api.jquery.com/data/" target="_blank" rel="noopener">https://api.jquery.com/data/</a><br>jQuery 插件编写 <a href="https://www.kancloud.cn/kancloud/javascript-standards-reference/46484" target="_blank" rel="noopener">https://www.kancloud.cn/kancloud/javascript-standards-reference/46484</a><br>JavaScript 模块化编程 <a href="https://www.kancloud.cn/kancloud/javascript-standards-reference/46490" target="_blank" rel="noopener">https://www.kancloud.cn/kancloud/javascript-standards-reference/46490</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2017/11/21/struts2.3-sheng-ji-dao-struts2.5.13/"/>
      <url>/2017/11/21/struts2.3-sheng-ji-dao-struts2.5.13/</url>
      
        <content type="html"><![CDATA[<h1 id="struts2-3升级到-struts2-5-13"><a href="#struts2-3升级到-struts2-5-13" class="headerlink" title="struts2.3升级到 struts2.5.13"></a>struts2.3升级到 struts2.5.13</h1><h1 id="1-log4j-1-升级到-log4j-2"><a href="#1-log4j-1-升级到-log4j-2" class="headerlink" title="1. log4j 1 升级到 log4j 2"></a>1. log4j 1 升级到 log4j 2</h1><p>1、删除掉 log4j 1的配置文件。如 classpath 下面的 log4j.xml 或者 log4j.properties。<br>2、新增 log4j2.xml 文件在 classpath 下。以下是最基本的配置。</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Appenders</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Console</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SYSTEM_OUT<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%d %-5p [%t] %C{2} (%F:%L) - %m%n<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Console</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Appenders</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Loggers</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- all 为所有的都输出 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Root</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Loggers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Configuration</span><span class="token punctuation">></span></span></code></pre><p>我的生产配置</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Appenders</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Console</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SYSTEM_OUT<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%d %-5p [%t] %C{2} (%F:%L) - %m%n<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Console</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RollingFile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>RollingFileInfo<span class="token punctuation">"</span></span> <span class="token attr-name">fileName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${sys:catalina.home}/logs/web/info.log<span class="token punctuation">"</span></span>                     <span class="token attr-name">filePattern</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${sys:catalina.home}/logs/web/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Filters</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!--设置只输出级别为INFO的日志--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ThresholdFilter</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>INFO<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ThresholdFilter</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>WARN<span class="token punctuation">"</span></span> <span class="token attr-name">onMatch</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>DENY<span class="token punctuation">"</span></span> <span class="token attr-name">onMismatch</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>NEUTRAL<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ThresholdFilter</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ERROR<span class="token punctuation">"</span></span> <span class="token attr-name">onMatch</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>DENY<span class="token punctuation">"</span></span> <span class="token attr-name">onMismatch</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>NEUTRAL<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Filters</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%d %-5p [%t] %C{2} (%F:%L) - %m%n<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Policies</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TimeBasedTriggeringPolicy</span><span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SizeBasedTriggeringPolicy</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20MB<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Policies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RollingFile</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RollingFile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>RollingFileWarn<span class="token punctuation">"</span></span> <span class="token attr-name">fileName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${sys:catalina.home}/logs/web/warn.log<span class="token punctuation">"</span></span>                     <span class="token attr-name">filePattern</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${sys:catalina.home}/logs/web/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Filters</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!--设置只输出级别为WARN的日志--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ThresholdFilter</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>WARN<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ThresholdFilter</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ERROR<span class="token punctuation">"</span></span> <span class="token attr-name">onMatch</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>DENY<span class="token punctuation">"</span></span> <span class="token attr-name">onMismatch</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>NEUTRAL<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Filters</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%d %-5p [%t] %C{2} (%F:%L) - %m%n<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Policies</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TimeBasedTriggeringPolicy</span><span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SizeBasedTriggeringPolicy</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20MB<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Policies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RollingFile</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RollingFile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>RollingFileError<span class="token punctuation">"</span></span> <span class="token attr-name">fileName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${sys:catalina.home}/logs/web/error.log<span class="token punctuation">"</span></span>                     <span class="token attr-name">filePattern</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${sys:catalina.home}/logs/web/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Filters</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!--设置只输出级别为ERROR的日志--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ThresholdFilter</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ERROR<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Filters</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%d %-5p [%t] %C{2} (%F:%L) - %m%n<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Policies</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TimeBasedTriggeringPolicy</span><span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SizeBasedTriggeringPolicy</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20MB<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Policies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RollingFile</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Appenders</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Loggers</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--&lt;logger name="org.springframework" level="INFO"/>--></span>        <span class="token comment" spellcheck="true">&lt;!--&lt;logger name="org.hibernate" level="INFO"/>--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>RollingFileInfo<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>RollingFileWarn<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>RollingFileError<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Root</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Loggers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Configuration</span><span class="token punctuation">></span></span></code></pre><p>3、maven 配置</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>log4j-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.8.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>log4j-slf4j-impl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.8.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>log4j-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.8.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h1 id="2-去除xerces依赖"><a href="#2-去除xerces依赖" class="headerlink" title="2. 去除xerces依赖"></a>2. 去除xerces依赖</h1><p>1、 移除对 xerces 的依赖包括 xerces、xercesImpl、mlParserAPIs（重点）<br>2、 maven 移除以下配置（检查 lib 中是否已经移除掉了）</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>xerces<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.5.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>xerces<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>xercesImpl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.10.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>maven 工程，需要分析依赖（使用命令 <code>mvn dependency:tree</code> ）是否存在传递的依赖的xerces<br><a href="http://chwshuang.iteye.com/blog/2069937" target="_blank" rel="noopener">阻止依赖传送门</a><br>注意：如果依赖的 jar 文件中还存在以上的 jar 会出现一个错误是说注解无法注入。据说是 JDK 默认携带了此类的实现。</p><blockquote><p>小插曲：出现下面的问题的时候，真心奔溃。这个提示明显是说annotation转换出现异常。看了2.5.13的源码。<code>org.apache.struts2.convention.annotation.Result.name()</code>这个是一个数组，而在2.3里面确实一个<code>string</code>，各种排查。无果。重新<code>build</code>了工程，也就是去掉了<code>xerces</code>这些依赖</p></blockquote><pre><code>java.lang.annotation.AnnotationTypeMismatchException: Incorrectly typed data found for annotation element public abstract java.lang.String[] org.apache.struts2.convention.annotation.Result.name() (Found data of type class java.lang.String[view])</code></pre><h1 id="3-Struts2-配置文件修改"><a href="#3-Struts2-配置文件修改" class="headerlink" title="3. Struts2 配置文件修改"></a>3. Struts2 配置文件修改</h1><p>struts2 的配置文件修改 dtd 头部引用</p><pre class=" language-xml"><code class="language-xml"><span class="token doctype">&lt;!DOCTYPE struts PUBLIC    "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"    "http://struts.apache.org/dtds/struts-2.5.dtd"></span></code></pre><p>web.xml修改</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>struts2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>        org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span></code></pre><h1 id="4-遗留问题"><a href="#4-遗留问题" class="headerlink" title="4. 遗留问题"></a>4. 遗留问题</h1><p>如果系统中使用 struts <code>struts.convention.action.includeJars</code>来导入包的话（配置如下）。会在tomcat6和7偶然出现在 classpath 找不到指定的 jar 文件。但是在最新版的 tomcat 8.5.23 是可以的。但是最奇怪的是 <code>build</code> 多几次就可以了 <del>_</del></p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constant</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>struts.convention.action.includeJars<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.*?/includeFile.*?jar(!/)?<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p><strong>后面要研究一下这个扫包的逻辑</strong></p><h1 id="4-1-更新20171126"><a href="#4-1-更新20171126" class="headerlink" title="4.1 更新20171126"></a>4.1 更新20171126</h1><p>经过发现 <code>struts.convention.action.includeJars</code> 的 <code>jar</code> 文件没有<code>META-INF</code>文件夹。正确的jar 文件目录是</p><pre><code>*.jar|--META-INF|--com    |--youpackage</code></pre><p>而在 lib 下面的却没有 <code>META-INF</code>。<br>使用 命令<code>mvn clean install</code> 打包的时候看了输出的目录的 <code>jar</code> 所有东西都有。然后在本地的 <code>repositories</code> 里面的 jar 也没有问题。</p><p><img src="http://img.lsof.fun/2019-01-28-15486498815104.jpg" alt="-c"><br>后来发现原来是这个锅是 <code>IDEA</code> 的。系统分为4个工程。依赖如下</p><pre><code>d工程（web）|--src|--WebRoot    |--WEB-INF        |--lib            |--a工程.jar            |--b工程.jar            |--c工程.jar        |--classes </code></pre><p>如果在 <code>IDEA</code> 中导入 d工程。然后再导入 其他三个工程。启动 tomcat 的时候 IDEA 会自动编译一下其他的三个工程。把其他三个工程的 <code>jar</code> 文件打包到 <code>lib</code> 下面。打包的时候就出现没有 <code>jar</code> 文件 <code>META-INF</code>这个目录。最奇怪的第二次启动就可以了<del>_</del>。</p><h1 id="5-备注"><a href="#5-备注" class="headerlink" title="5. 备注"></a>5. 备注</h1><ol><li>实验过 <code>jar</code> 文件中必须有<code>META-INF</code>这层目录（里面可以没有描述文件）。没有的话跳过此包不扫描。<em>（猜想：估计在 tomcat6、7 扫描的时候没有此目录的话可能会被认为是普通的压缩文件。不需要装载到系统中去。tomcat8是支持没有<code>META-INF</code>的）</em> 。有兴趣的可以去官网看卡 <a href="https://docs.oracle.com/javase/7/docs/technotes/guides/jar/jar.html" target="_blank" rel="noopener">传送门</a>。另外发现IBM 一篇干货 <a href="https://www.ibm.com/developerworks/cn/java/j-jar/index.html" target="_blank" rel="noopener">link</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
